name: Train and Export Models

on:
  push:
    paths:
      - "improved_disease_dataset.csv"
      - "generate_and_save_models.py"
      - ".github/workflows/train-models.yml"
  workflow_dispatch:

jobs:
  train:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run model training script
        run: python generate_and_save_models.py

      - name: Upload PKL files
        uses: actions/upload-artifact@v4
        with:
          name: pkls
          path: models/*.pkl

  use_pkls:
    needs: train
    runs-on: self-hosted
    steps:
      - name: Download PKL files
        uses: actions/download-artifact@v4
        with:
          name: pkls
          path: ./downloaded_pkls

      - name: Build Docker image for FastAPI
        run: docker build -t fastapi-app .

      - name: Stop and remove old container if exists
        run: |
          docker rm -f fastapi-app-container || true

      - name: Run FastAPI container
        run: |
          docker run -d \
            -v ${{ github.workspace }}/downloaded_pkls:/app/models \
            -p 8000:8000 \
            --name fastapi-app-container \
            fastapi-app
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download jq
        run: |
          curl -L -o jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
          chmod +x jq
          echo "$PWD" >> $GITHUB_PATH

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK
        uses: android-actions/setup-android@v3

      # Now you can build the APK
      - name: Install dependencies
        run: flutter pub get
        working-directory: app

      - name: Build APK
        run: flutter build apk --release
        working-directory: app

      - name: Build IPA (unsigned)
        run: |
          cd app 
          flutter build ipa --no-codesign

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.ipa
          path: build/ios/ipa/*.ipa
